// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id
  name String 
  password String
  myrooms Room[] 
  conversations Conversation[] 
  notifications Notification[]
  messages Message[]
}

model Notification {
  id Int @id @default(autoincrement())
  text String
  createdAt String
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Room {
  id Int @id @default(autoincrement())
  name String @unique
  users User[]
  usercount Int @default(0)
  conversations Conversation[] 
  trends Trends[] 
}

model Trends {
  id Int @id @default(autoincrement())
  hashtag String @unique
  conversations Conversation []
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId Int
}

model Conversation {
  id Int @id @default(autoincrement())
  talker User @relation(fields: [talkerId], references: [id], onDelete: Cascade)
  talkerId Int 
  room Room? @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId Int?
  message Message @relation(fields: [messageId], references: [id], onDelete: Cascade) 
  messageId Int @unique
  agree Int[]
  disagree Int[]
  trend Trends? @relation(fields: [trendId], references: [id])
  trendId Int?
  comments Conversation[] @relation("comments")
  commentsCount Int @default(0)
  conversation Conversation? @relation(fields: [conversationId], references: [id], onDelete: Cascade, "comments")
  conversationId Int?
}

model Chat {
  id Int @id
  messages Message[] 
}

model Message {
  id Int @id @default(autoincrement())
  createdAt String
  text String
  media Media[] 
  sender User @relation(fields: [senderId], references: [id], onDelete: Cascade)
  senderId Int
  chat Chat? @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId Int?
  conversation Conversation? 
}

model Media {
  id Int @id @default(autoincrement())
  link String
  message Message @relation(fields: [messageId], references: [id], onDelete:Cascade)
  messageId Int
}